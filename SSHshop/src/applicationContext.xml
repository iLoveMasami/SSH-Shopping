<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
<!-- 引入外部属性文件 -->
<context:property-placeholder location="classpath:jdbc.properties"/>
<!-- 配置连接池 -->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="driverClass" value="${jdbc.driverClass}"></property>
	<property name="jdbcUrl" value="${jdbc.url}"></property>
	<property name="user" value="${jdbc.username}"></property>
	<property name="password" value="${jdbc.password}"></property>	
</bean>

				<!-- 配置hibernate的相关属性 -->
<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<!-- 注入连接池 -->
	<property name="dataSource" ref="dataSource"></property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			<prop key="hibernate.show_sql">true</prop>	
			<prop key="hibernate.format_sql">true</prop>
			<!-- update：如果有表就更新，没有就创建 -->
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="hibernate.connection.autocommit">false</prop>
		</props>
	</property>
					<!-- 加载Hibernate中的映射文件 -->
	<property name="mappingResources">
		<list>
			<value>iLoveMasami/shop/entity/User.hbm.xml</value>
			<value>iLoveMasami/shop/entity/Category.hbm.xml</value>
			<value>iLoveMasami/shop/entity/Product.hbm.xml</value>
			<value>iLoveMasami/shop/entity/CategorySecond.hbm.xml</value>
			<value>iLoveMasami/shop/entity/Order.hbm.xml</value>
			<value>iLoveMasami/shop/entity/OrderItem.hbm.xml</value>
			<value>iLoveMasami/back/entity/AdminUser.hbm.xml</value>
		</list>
	</property>
</bean>

<bean id="privilegeInterceptor" class="iLoveMasami.back.interceptor.PrivilegeInterceptor" scope="prototype">
</bean>
				<!-- 配置Action的类 -->
<bean id="indexAction" class="iLoveMasami.shop.index.action.IndexAction" scope="prototype">
	<property name="categoryService" ref="categoryService"></property>
	<property name="productService" ref="productService"></property>
</bean>
<bean id="userAction" class="iLoveMasami.shop.action.UserAction" scope="prototype">
	<property name="userService" ref="userService"></property>
</bean>
				<!-- 验证码 -->
<bean id="checkImgAction" class="iLoveMasami.shop.action.CheckImgAction" scope="prototype">
</bean>
				<!-- 商品模块 -->
<bean id="productAction" class="iLoveMasami.shop.action.ProductAction" scope="prototype">
	<property name="productService" ref="productService"></property>
	<property name="categoryService" ref="categoryService"></property>
</bean>
			<!-- 购物车 -->
<bean id="cartAction" class="iLoveMasami.shop.action.CartAction" scope="prototype">
	<property name="productService" ref="productService"></property>
</bean>
			<!--订单  -->
<bean id="orderAction" class="iLoveMasami.shop.order.action.OrderAction" scope="prototype">
	<property name="orderService" ref="orderService"/>
</bean>
			<!-- 后台登录用户 -->
<bean id="adminUserAction" class="iLoveMasami.back.action.AdminUserAction" scope="prototype">
	<property name="adminUserService" ref="adminUserService"/>
</bean>
			<!-- 后台Category -->
<bean id="adminCategoryAction" class="iLoveMasami.back.action.AdminCategoryAction" scope="prototype">
	<property name="categoryService" ref="categoryService"/>
</bean>	
				
				
				<!-- 配置业务层的类 -->
<bean id="userService" class="iLoveMasami.shop.service.UserService">
	<property name="userDao" ref="userDao"/>
</bean>
<bean id="categoryService" class="iLoveMasami.shop.service.CategoryService">
	<property name="categoryDao" ref="categoryDao"/>
</bean>
<bean id="productService" class="iLoveMasami.shop.service.ProductService">
	<property name="productDao" ref="productDao"/>
</bean>
<bean id="orderService" class="iLoveMasami.shop.order.serviceImpl.OrderServiceImpl">
	<property name="orderDao" ref="orderDao"/>
</bean>
<bean id="adminUserService" class="iLoveMasami.back.service.AdminUserService">
	<property name="adminUserDao" ref="adminUserDao"/>
</bean>


				<!-- 配置DAO的类 -->
<bean id="userDao" class="iLoveMasami.shop.dao.UserDao">
	<property name="sessionFactory" ref="sessionFactory"/>
</bean>
<bean id="categoryDao" class="iLoveMasami.shop.dao.CategoryDao">
	<property name="sessionFactory" ref="sessionFactory"/>
</bean>
<bean id="productDao" class="iLoveMasami.shop.dao.ProductDao">
	<property name="sessionFactory" ref="sessionFactory"/>
</bean>
<bean id="orderDao" class="iLoveMasami.shop.order.daoImpl.OrderDaoImpl">
	<property name="sessionFactory" ref="sessionFactory"/>
</bean>
			<!-- 后台用户 -->
<bean id="adminUserDao" class="iLoveMasami.back.dao.AdminUserDao">
	<property name="sessionFactory" ref="sessionFactory"/>
</bean>			

				<!-- 配置事务管理器 -->
<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	<property name="sessionFactory" ref="sessionFactory"></property>
</bean>

				<!-- 开启注解事务 -->
<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>